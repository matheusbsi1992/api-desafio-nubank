#version: "3.9"

services:
  # Cache
  redis:
    image: redis:8.2
    container_name: redis
    command: [
      "redis-server",
      "--save", "",
      "--appendonly", "no",
      "--databases", "1",
      "--loglevel", "warning",
      "--logfile", "/dev/null",
      "--tcp-keepalive", "60"
    ]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - "6379:6379"
  # DB PostgreSQL
  postgres:
    image:
      postgres:15
    container_name: api-nubank-base-de-dados
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: api-nubank-desafio
    ports:
      - "5432:5432"
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d api-nubank-desafio" ]
      interval: 5s
      timeout: 5s
      retries: 10
  # Image da aplicação
  app:
    build: .
    container_name: api-nubank-desafio
    depends_on:
      - postgres
      #- redis
      # Dependencia do DB criada anteriormente
      # O desafio nao pedi o redis como alto dependencia - redis
      # condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/api-nubank-desafio
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SERVER_PORT: 9393
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      #SPRING_FLYWAY_SCHEMAS: api-nubank-dados
    ports:
      - "9393:9393"
volumes: # Adicione esta seção!
  postgres_data:  # Declaração do volume
